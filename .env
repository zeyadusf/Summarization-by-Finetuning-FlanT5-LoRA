{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"%%time\n!pip install --upgrade --quiet transformers datasets accelerate evaluate bitsandbytes loralib peft\n!pip install --quiet rouge-score tensorboard py7zr","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-20T13:19:22.496884Z","iopub.execute_input":"2024-07-20T13:19:22.497778Z","iopub.status.idle":"2024-07-20T13:20:05.340084Z","shell.execute_reply.started":"2024-07-20T13:19:22.497714Z","shell.execute_reply":"2024-07-20T13:20:05.338412Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"CPU times: user 897 ms, sys: 163 ms, total: 1.06 s\nWall time: 42.8 s\n","output_type":"stream"}]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom tqdm import tqdm\nfrom random import randrange\n\n# \nfrom datasets import load_dataset\nfrom transformers import AutoTokenizer, AutoModelForSeq2SeqLM\n# \n","metadata":{"execution":{"iopub.status.busy":"2024-07-20T13:34:26.715377Z","iopub.execute_input":"2024-07-20T13:34:26.716044Z","iopub.status.idle":"2024-07-20T13:34:29.075283Z","shell.execute_reply.started":"2024-07-20T13:34:26.715999Z","shell.execute_reply":"2024-07-20T13:34:29.073572Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":"# Helper","metadata":{}},{"cell_type":"code","source":"class Variables:\n    \n    __shared_instance = None\n    @staticmethod\n    def get_instance():\n        if Variables.__shared_instance == None: Variables()\n        return __shared_instance\n    def __init__(self):\n        if Variables.__shared_instance != None : raise Exception(\"This class is a singleton class !\")\n        else:  Variables.__shared_instance = self\n            \n    Paths={\n        'data' : 'samsum',\n        'model': 'mistralai/Mistral-7B-v0.1',\n        'new_checkpoint': 'mistral7bSummarization',\n        'wandb_proj': 'Summarization',\n        'wandb_run':'mistral7bSummarization',\n    }\n    Hayperparametsrs={}\n    Tokens={}\nvar = Variables()","metadata":{"execution":{"iopub.status.busy":"2024-07-20T14:00:07.989146Z","iopub.execute_input":"2024-07-20T14:00:07.989607Z","iopub.status.idle":"2024-07-20T14:00:07.998644Z","shell.execute_reply.started":"2024-07-20T14:00:07.989571Z","shell.execute_reply":"2024-07-20T14:00:07.997051Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"markdown","source":"<hr>","metadata":{}},{"cell_type":"markdown","source":"# Load Data","metadata":{}},{"cell_type":"code","source":"dataset = load_dataset(\"samsum\",trust_remote_code=True)\ndataset ","metadata":{"execution":{"iopub.status.busy":"2024-07-20T13:35:47.058522Z","iopub.execute_input":"2024-07-20T13:35:47.058986Z","iopub.status.idle":"2024-07-20T13:35:53.023115Z","shell.execute_reply.started":"2024-07-20T13:35:47.058947Z","shell.execute_reply":"2024-07-20T13:35:53.021706Z"},"trusted":true},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/2.94M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"96b3e803f910434b829c9f18203c4d37"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/14732 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0c62cead62084909b4e2430b7297f5a6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating test split:   0%|          | 0/819 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"42c368409b1f48f399b59dbdbfb207f3"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating validation split:   0%|          | 0/818 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"221587fcd5f2499ca8a23c1f49a60d12"}},"metadata":{}},{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"DatasetDict({\n    train: Dataset({\n        features: ['id', 'dialogue', 'summary'],\n        num_rows: 14732\n    })\n    test: Dataset({\n        features: ['id', 'dialogue', 'summary'],\n        num_rows: 819\n    })\n    validation: Dataset({\n        features: ['id', 'dialogue', 'summary'],\n        num_rows: 818\n    })\n})"},"metadata":{}}]},{"cell_type":"code","source":"dataset['train'][:3]","metadata":{"execution":{"iopub.status.busy":"2024-07-20T13:37:26.498278Z","iopub.execute_input":"2024-07-20T13:37:26.498807Z","iopub.status.idle":"2024-07-20T13:37:26.507955Z","shell.execute_reply.started":"2024-07-20T13:37:26.498731Z","shell.execute_reply":"2024-07-20T13:37:26.506666Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"{'id': ['13818513', '13728867', '13681000'],\n 'dialogue': [\"Amanda: I baked  cookies. Do you want some?\\r\\nJerry: Sure!\\r\\nAmanda: I'll bring you tomorrow :-)\",\n  'Olivia: Who are you voting for in this election? \\r\\nOliver: Liberals as always.\\r\\nOlivia: Me too!!\\r\\nOliver: Great',\n  \"Tim: Hi, what's up?\\r\\nKim: Bad mood tbh, I was going to do lots of stuff but ended up procrastinating\\r\\nTim: What did you plan on doing?\\r\\nKim: Oh you know, uni stuff and unfucking my room\\r\\nKim: Maybe tomorrow I'll move my ass and do everything\\r\\nKim: We were going to defrost a fridge so instead of shopping I'll eat some defrosted veggies\\r\\nTim: For doing stuff I recommend Pomodoro technique where u use breaks for doing chores\\r\\nTim: It really helps\\r\\nKim: thanks, maybe I'll do that\\r\\nTim: I also like using post-its in kaban style\"],\n 'summary': ['Amanda baked cookies and will bring Jerry some tomorrow.',\n  'Olivia and Olivier are voting for liberals in this election. ',\n  'Kim may try the pomodoro technique recommended by Tim to get more stuff done.']}"},"metadata":{}}]}]}